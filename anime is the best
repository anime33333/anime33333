local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("I Love anime", "DarkTheme")

-- Main
local Main = Window:NewTab("Main")
local MainSection = Main:NewSection("Main")


MainSection:NewButton("infinite yield", "run", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

MainSection:NewButton("dupe", "save stuff", function()
    getgenv().olddata = game:GetService("ReplicatedStorage").References.Comm.Events.SetSettings
    game:GetService("ReplicatedStorage").References.Comm.Events.SetSettings:FireServer(getgenv().olddata)
end)

MainSection:NewButton("soul duping need wood chest", "dup soul", function()
    local chest = game:GetService("Workspace").Replicators.NonPassive["Wood Storage Chest"]
    local putIn = true
    local itemIDs = {204, 202, 201, 203, 218, 216} -- IDs for Max Soul
    local Event = game:GetService("ReplicatedStorage").References.Comm.Events.UpdateStorageChest

    for _, itemID in ipairs(itemIDs) do
        Event:FireServer(chest, putIn, itemID)
    end
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Highlight = Instance.new("Highlight")
Highlight.Name = "Highlight"
function ApplyToCurrentPlayers()
   for i,player in pairs(Players:GetChildren()) do
      repeat wait() until player.Character
      if not player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
         local HighlightClone = Highlight:Clone()
         HighlightClone.Adornee = player.Character
         HighlightClone.Parent = player.Character:FindFirstChild("HumanoidRootPart")
         HighlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
         HighlightClone.Name = "Highlight"
      end
   end
end
RunService.Heartbeat:Connect(function()
   ApplyToCurrentPlayers()
end)

MainSection:NewButton("u can kill niggers", "run boy", function()
    Sonar =  game.ReplicatedStorage:WaitForChild('References'):WaitForChild('Comm'):WaitForChild('Events'):WaitForChild('Sonar');

for i=1, math.random(15, 99) do
  Sonar:FireServer(Workspace, Workspace, Workspace)
end

if not getgenv().bypassing then
    getgenv().bypassing = true
    local bypassac

    bypassac = hookmetamethod(game, '__namecall', function(self, ...)
        local args = {...}
        if not checkcaller() and tostring(self) == "Sonar" then
            return nil
        end
        return bypassac(self, ...)
    end) 
end
